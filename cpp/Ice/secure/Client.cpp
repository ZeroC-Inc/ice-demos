// Copyright (c) ZeroC, Inc.

#include "Greeter.h"

#include <cstdlib>
#include <iostream>

using namespace std;

int
main(int argc, char* argv[])
{
    // Figure out my name.
    const char* name = getenv("USER");
    if (name == nullptr)
    {
        name = getenv("USERNAME");
    }
    if (name == nullptr)
    {
        name = "alice";
    }

    // Create an Ice communicator to initialize the Ice runtime. The new communicator gets its properties from file
    // "config.client".
    const Ice::CommunicatorHolder communicatorHolder{argc, argv, "config.client"};
    const Ice::CommunicatorPtr& communicator = communicatorHolder.communicator();

    // GreeterPrx is a class generated by the Slice compiler. We create a proxy from a communicator and a "stringified
    // proxy" with the address of the target object.
    // If you run the server on a different computer, replace localhost in the string below with the server's hostname
    // or IP address.
    VisitorCenter::GreeterPrx greeter{communicator, "greeter:ssl -h localhost -p 4061"};

    // Send a request to the remote object and get the response. Both the -> and . syntax can be used to make
    // invocations with the proxy.
    string greeting = greeter->greet(name);

    cout << greeting << endl;
    return 0;
}
