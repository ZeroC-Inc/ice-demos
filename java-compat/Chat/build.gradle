buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        // Use older proguard version when compile with Java 1.7
        if(JavaVersion.current() < JavaVersion.VERSION_1_8) {
            classpath "net.sf.proguard:proguard-gradle:6.0.2"
        }
        else {
            classpath "net.sf.proguard:proguard-gradle:6.1.1"
        }
    }
}

slice {
    java {
        include = ["${projectDir}"]
        srcDir = '.'
        include = ["${projectDir}"]
    }
}

dependencies {
    implementation 'com.jgoodies:jgoodies-common:1.8.0'
    implementation 'com.jgoodies:jgoodies-looks:2.6.0'
    implementation 'com.jgoodies:jgoodies-forms:1.8.0'
    implementation "com.zeroc:ice-compat:${project.iceArtifactVersion}"
    implementation "com.zeroc:glacier2-compat:${project.iceArtifactVersion}"
}

if(JavaVersion.current() == JavaVersion.VERSION_11) {
    jar {
        archiveFileName = "ChatGUI.jar"
        destinationDirectory = new File("${projectDir}")
        manifest {
            attributes 'Main-Class': "ChatDemoGUI.MainView"
            attributes("Class-Path": configurations.runtimeClasspath.resolve().collect{ it.toURI() }.join(' '))
        }
    }
}
else {
    jar {
        archiveFileName = "ChatGUITEMP.jar"
        manifest {
            attributes 'Main-Class': "ChatDemoGUI.MainView"
        }
    }

    def javaHome = System.properties['java.home']

    task proguard(type: proguard.gradle.ProGuardTask, dependsOn: jar) {
        injars configurations.runtimeClasspath.resolve(), filter: '!META-INF/**'
        injars "${buildDir}/libs/ChatGUITEMP.jar"
        if(JavaVersion.current() <= JavaVersion.VERSION_1_8) {
            libraryjars "${javaHome}/lib/rt.jar"
            libraryjars "${javaHome}/lib/jsse.jar"
        } else {
            libraryjars "${javaHome}/jmods/java.base.jmod"
            libraryjars "${javaHome}/jmods/java.logging.jmod"
            libraryjars "${javaHome}/jmods/java.desktop.jmod"
            libraryjars "${javaHome}/jmods/java.prefs.jmod"
        }
        outjars "ChatGUI.jar"
        configuration "chatdemogui.pro"
    }
    assemble.dependsOn(proguard)
}

clean {
    delete("ChatGUI.jar")
}
