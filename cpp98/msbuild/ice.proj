<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <VCTargetsPath Condition="'$(VCTargetsPath)' == ''">C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0</VCTargetsPath>
        <DefaultPlatformToolset Condition="'$(VisualStudioVersion)' == '10.0' And  '$(DefaultPlatformToolset)' == ''">v100</DefaultPlatformToolset>
    </PropertyGroup>

    <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />

    <!-- Import Ice Version settings when building with Ice source distribution -->
    <Import Project="$(IceHome)\config\icebuilder.props"
            Condition="Exists('$(IceHome)\config\icebuilder.props')"/>

    <!-- Custom task to download files -->
    <!-- Nuget executable -->
    <Choose>
        <When Condition="'$(VisualStudioVersion)' == '10.0'">
            <PropertyGroup>
                <!-- We use NuGet 5.4.0 because more recent versions fail with Visual Studio 2010 -->
                <NugetExe>$(MSBuildThisFileDirectory)NuGet-5.4.0.exe</NugetExe>
                <NugetURL>https://dist.nuget.org/win-x86-commandline/v5.4.0/nuget.exe</NugetURL>
            </PropertyGroup>
        </When>
        <When Condition="'$(VisualStudioVersion)' == '15.0' Or '$(VisualStudioVersion)' == '14.0' Or '$(VisualStudioVersion)' == '12.0'">
            <PropertyGroup>
                <!-- We use NuGet 6.3.3 because more recent versions fail with Visual Studio 2013,
                     Visual Studio 2015, and Visual Studio 2017 -->
                <NugetExe>$(MSBuildThisFileDirectory)NuGet-6.3.3.exe</NugetExe>
                <NugetURL>https://dist.nuget.org/win-x86-commandline/v6.3.3/nuget.exe</NugetURL>
            </PropertyGroup>
        </When>
        <Otherwise>
            <PropertyGroup>
                <NugetExe>$(MSBuildThisFileDirectory)NuGet-6.7.0.exe</NugetExe>
                <NugetURL>https://dist.nuget.org/win-x86-commandline/v6.7.0/nuget.exe</NugetURL>
            </PropertyGroup>
        </Otherwise>
    </Choose>

    <!-- Download nuget.exe if not present -->
    <Target Name="GetNuget" Condition="!Exists('$(NugetExe)')">
        <Exec Command="powershell -ExecutionPolicy ByPass -Command &quot;[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12;(New-Object Net.WebClient).DownloadFile('$(NugetURL)', '$(NugetExe)')&quot;"/>
    </Target>

    <Target Name="RemovePackages">
      <Exec Command="rmdir /s /q $(MSBuildThisFileDirectory)..\packages" Condition="Exists('$(MSBuildThisFileDirectory)..\packages')" />
    </Target>

    <Target Name="NuGetRestore" DependsOnTargets="GetNuGet" Condition="!Exists('$(IceHome)\cpp')">
      <Exec Command="$(NuGetExe) restore &quot;$(MSBuildThisFileDirectory)..\C++98 demos.sln&quot;"/>
    </Target>

    <PropertyGroup>
      <SymbolServer Condition="'$(SymbolServer)' == ''">$(SYMBOL_SERVER)</SymbolServer>
      <SymbolServer Condition="'$(SymbolServer)' == ''">SRV*%TEMP%\SymbolCache*http://symbols.zeroc.com</SymbolServer>
    </PropertyGroup>

    <Target Name="DownloadSymbols" DependsOnTargets="NuGetRestore">
        <Exec IgnoreExitCode="True"
              Command="symchk /r $(MSBuildThisFileDirectory)..\packages\zeroc.ice.$(DefaultPlatformToolset).3.7.10\build\native\bin\$(Platform)\$(Configuration)\* /s $(SymbolServer)">
              <Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
        </Exec>
        <Warning  Text="PDBs download failed, stack traces might be missing or incomplete" Condition="'$(ErrorCode)' != '0'" />
    </Target>

    <ItemGroup>
        <CppPlatformToolset Include="v100"/>
        <CppPlatformToolset Include="v120"/>
        <CppPlatformToolset Include="v140"/>
        <CppPlatformToolset Include="v141"/>
        <CppPlatformToolset Include="v142"/>
        <CppPlatformToolset Include="v143"/>
    </ItemGroup>

    <!--
        When IceHome is set to a source distribution we install the NuGet packages
        from IceHome build, for the platform we are building, we also need to copy
        the props and targets files for the rest of platforms supported by the demos
        to get away with NuGet install checks
    -->
    <Target Name="InstallLocalPackages"
            DependsOnTargets="GetNuGet"
            Condition="Exists('$(IceHome)\cpp')">
        <RemoveDir Directories="$(MSBuildThisFileDirectory)..\packages\zeroc.ice.%(CppPlatformToolset.Identity).$(IceVersion)"/>
        <Copy SourceFiles="$(IceHome)\cpp\msbuild\zeroc.ice.%(CppPlatformToolset.Identity).props"
              DestinationFolder="$(MSBuildThisFileDirectory)..\packages\zeroc.ice.%(CppPlatformToolset.Identity).$(IceVersion)\build\native\" />
        <Copy SourceFiles="$(IceHome)\cpp\msbuild\zeroc.ice.%(CppPlatformToolset.Identity).targets"
              DestinationFolder="$(MSBuildThisFileDirectory)..\packages\zeroc.ice.%(CppPlatformToolset.Identity).$(IceVersion)\build\native\" />
        <Exec Command="rmdir /s /q $(MSBuildThisFileDirectory)..\packages\zeroc.ice.$(DefaultPlatformToolset).$(IceVersion)"
              Condition="Exists('$(MSBuildThisFileDirectory)..\packages\zeroc.ice.$(DefaultPlatformToolset).$(IceVersion)')"/>

        <!-- Run the distribution NuGetPack target to ensure packages are up to date -->
        <MSBuild Projects="$(IceHome)\cpp\msbuild\ice.proj"
                 Properties="Platform=$(Platform);Configuration=$(Configuration)"
                 RemoveProperties="IceHome"
                 Targets="NuGetPack"/>
        <!-- Add the package to a local source and install it from it -->
        <Exec Command="$(NuGetExe) init $(IceHome)\cpp\msbuild\zeroc.ice.$(DefaultPlatformToolset) local" />
        <Exec Command="$(NuGetExe) install zeroc.ice.$(DefaultPlatformToolset) -Source $(MSBuildThisFileDirectory)local -NoCache -SolutionDirectory $(MSBuildThisFileDirectory).."/>
        <!-- Remove the local source that is no longer needed -->
        <Exec Command="rmdir /s /q local" />
        <Exec Command="$(NuGetExe) install zeroc.icebuilder.msbuild -SolutionDirectory $(MSBuildThisFileDirectory).."/>
    </Target>

    <Target Name="Build"
            DependsOnTargets="InstallLocalPackages;NuGetRestore">
        <MSBuild Projects="$(MSBuildThisFileDirectory)..\C++98 demos.sln" RemoveProperties="IceHome"/>
    </Target>
</Project>
